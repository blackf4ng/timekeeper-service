# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  database:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - database-password
    volumes:
      - ./database/sql:/docker-entrypoint-initdb.d
      - database-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=timekeeper
      - POSTGRES_PASSWORD_FILE=/run/secrets/database-password
    expose:
      - 5432
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  api-server:
    build:
      context: .
    ports:
      - "80:8080"
    environment:
      - APPLICATION=API_SERVER
    depends_on:
      database:
        condition: service_healthy
  status-poller:
    build:
      context: .
    environment:
      - APPLICATION=STATUS_POLLER
    depends_on:
      database:
        condition: service_healthy
  scan-submitter:
    build:
      context: .
    environment:
      - APPLICATION=SCAN_SUBMITTER
    depends_on:
      database:
        condition: service_healthy

volumes:
  database-data:
secrets:
  database-password:
    file: database/password.txt
